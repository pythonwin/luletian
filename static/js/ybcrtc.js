const _0x1ce218 = _0x25ba; (function (_0x44e2c3, _0x48e0a4) { const _0x36aa0b = _0x25ba, _0x2da76a = _0x44e2c3(); while (!![]) { try { const _0x428354 = parseInt(_0x36aa0b(0x10d)) / 0x1 + parseInt(_0x36aa0b(0x112)) / 0x2 * (parseInt(_0x36aa0b(0x122)) / 0x3) + parseInt(_0x36aa0b(0x113)) / 0x4 * (-parseInt(_0x36aa0b(0xfd)) / 0x5) + -parseInt(_0x36aa0b(0x106)) / 0x6 * (parseInt(_0x36aa0b(0x11c)) / 0x7) + parseInt(_0x36aa0b(0x103)) / 0x8 + parseInt(_0x36aa0b(0xf7)) / 0x9 * (parseInt(_0x36aa0b(0xf6)) / 0xa) + parseInt(_0x36aa0b(0xf4)) / 0xb * (-parseInt(_0x36aa0b(0x102)) / 0xc); if (_0x428354 === _0x48e0a4) break; else _0x2da76a['push'](_0x2da76a['shift']()); } catch (_0x4f03e2) { _0x2da76a['push'](_0x2da76a['shift']()); } } }(_0x12b1, 0x5d992)); class YBCPeerConnection extends RTCPeerConnection { constructor(_0x319b76 = { 'iceServers': [{ 'urls': 'turn:39.105.109.161:3478', 'credential': _0x1ce218(0xf9), 'username': _0x1ce218(0xfb) }, { 'urls': _0x1ce218(0x11e) }] }) { super(_0x319b76); } ['getAddress'](_0x26fe17) { this['onicecandidate'] = function (_0x8d945b) { const _0x19c018 = _0x25ba; if (_0x8d945b['candidate']) _0x26fe17(_0x8d945b[_0x19c018(0x101)]); else { } }; } [_0x1ce218(0x11d)](_0x148e14) { const _0x2f28f1 = _0x1ce218; if (!this) return; if (!_0x148e14) { console['error'](_0x2f28f1(0x111)); return; } _0x148e14[_0x2f28f1(0xff)]()[_0x2f28f1(0x110)](_0x321674 => { const _0x44c9f9 = _0x2f28f1; this[_0x44c9f9(0x109)](_0x321674, _0x148e14); }); } [_0x1ce218(0x11b)](_0x49ed9c) { const _0x266d09 = _0x1ce218; this[_0x266d09(0x118)] = function (_0x555095) { const _0x476854 = _0x266d09; _0x49ed9c(_0x555095[_0x476854(0x105)][0x0]); }; } [_0x1ce218(0xfa)]() { let _0x15b49f = new Promise((_0x3999c2, _0x585b7f) => { const _0x39598f = _0x25ba; connection[_0x39598f(0x118)] = function (_0x1430db) { const _0x4e6648 = _0x39598f; _0x3999c2(_0x1430db[_0x4e6648(0x105)][0x0]); }; }); return _0x15b49f; } [_0x1ce218(0x10c)](_0xe7cc4c) { this['createOffer']()['then'](_0x3771b7 => { const _0xdc23d7 = _0x25ba; this[_0xdc23d7(0x10b)](_0x3771b7), _0xe7cc4c(_0x3771b7); }); } [_0x1ce218(0x121)](_0xc854bd) { this['setRemoteDescription'](new RTCSessionDescription(_0xc854bd)); } ['getAnswer'](_0x25a338) { const _0xf5f283 = _0x1ce218; this[_0xf5f283(0xf8)]()[_0xf5f283(0x114)](_0x3af65e => { const _0x58efdf = _0xf5f283; this[_0x58efdf(0x10b)](_0x3af65e), _0x25a338(_0x3af65e); }); } [_0x1ce218(0x123)](_0x23dc7c) { const _0x549cc0 = _0x1ce218; this[_0x549cc0(0x117)](new RTCSessionDescription(_0x23dc7c)); } [_0x1ce218(0xfc)](_0x225981) { const _0x16f088 = _0x1ce218; let _0x3eb20d = new RTCIceCandidate({ 'sdpMLineIndex': _0x225981['sdpMid'], 'candidate': _0x225981[_0x16f088(0x101)] }); this[_0x16f088(0x115)](_0x3eb20d); } } function _0x12b1() { const _0x22f6b6 = ['56CQdqlb', '25244gDDIoG', 'then', 'addIceCandidate', 'videoinput', 'setRemoteDescription', 'ontrack', 'getAudioTracks', 'getUserMedia', 'receiveStream', '7gAqvgU', 'sendStream', 'stun:39.105.109.161:3478', 'kind', 'length', 'saveOffer', '56130KxzZeo', 'saveAnswer', 'audio', 'audioinput', 'displayTracks', '55FBiJrz', 'display', '13620zNdzGw', '2043cMLRVN', 'createAnswer', 'wbo', 'getRemoteStream', 'who', 'saveAddress', '50iSiVpP', 'getMediaTracks', 'getTracks', 'mediaDevices', 'candidate', '742044bhgBNB', '1427872MspEwI', 'push', 'streams', '3380862rRUOvE', 'mixTracks', 'video', 'addTrack', 'getDisplayMedia', 'setLocalDescription', 'getOffer', '307612wHHhPM', 'log', 'audiooutput', 'forEach', '未能获取本地流']; _0x12b1 = function () { return _0x22f6b6; }; return _0x12b1(); } navigator[_0x1ce218(0x100)][_0x1ce218(0xfe)] = function (_0xcca7ae) { return getClassifyTracks(_0xcca7ae)['then'](function (_0x11d1ef) { return _0x11d1ef; }); }; async function videoTracks(_0x1733c7 = { 'audio': ![], 'video': !![] }) { const _0xd70d25 = _0x1ce218; let _0x33e429 = await navigator[_0xd70d25(0x100)][_0xd70d25(0x11a)](_0x1733c7), _0x5f49c8 = _0x33e429['getVideoTracks'](); return _0x5f49c8; } async function audioTracks(_0x4b551b = { 'audio': !![], 'video': ![] }) { const _0x56f65e = _0x1ce218; let _0x1b9138 = await navigator[_0x56f65e(0x100)][_0x56f65e(0x11a)](_0x4b551b), _0x47fec1 = _0x1b9138[_0x56f65e(0x119)](); return _0x47fec1; } async function displayTracks(_0x575143 = { 'audio': ![], 'video': !![] }) { const _0x3536f8 = _0x1ce218; let _0x119ce4 = await navigator[_0x3536f8(0x100)][_0x3536f8(0x10a)](_0x575143), _0x303ee0 = _0x119ce4['getVideoTracks'](); return _0x303ee0; } async function getClassifyTracks(_0x441997 = { 'audio': ![], 'video': ![], 'display': ![] }) { const _0x42b0e4 = _0x1ce218; let _0x80305d = { 'audio': [], 'video': [] }; if (_0x441997[_0x42b0e4(0x124)]) { let _0x151cd0 = await this['audioTracks']({ 'audio': _0x441997[_0x42b0e4(0x124)] }); for (let _0x572635 = 0x0; _0x572635 < _0x151cd0[_0x42b0e4(0x120)]; _0x572635++) { _0x80305d[_0x42b0e4(0x124)][_0x42b0e4(0x104)](_0x151cd0[_0x572635]); } } if (_0x441997['display']) { let _0x321d94 = await this[_0x42b0e4(0x126)]({ 'video': _0x441997[_0x42b0e4(0xf5)] }); for (let _0x21142d = 0x0; _0x21142d < _0x321d94[_0x42b0e4(0x120)]; _0x21142d++) { _0x80305d[_0x42b0e4(0x108)][_0x42b0e4(0x104)](_0x321d94[_0x21142d]); } } else { if (_0x441997['video']) { let _0x385017 = await this['videoTracks']({ 'video': _0x441997[_0x42b0e4(0x108)] }); for (let _0x425926 = 0x0; _0x425926 < _0x385017['length']; _0x425926++) { _0x80305d[_0x42b0e4(0x108)][_0x42b0e4(0x104)](_0x385017[_0x425926]); } } } return _0x80305d; } navigator['mediaDevices'][_0x1ce218(0x107)] = function (_0x58f352) { const _0x532f0d = _0x1ce218; let _0x653b5e = new MediaStream(); if (_0x58f352[_0x532f0d(0x108)]) for (let _0x5d7a0e = 0x0; _0x5d7a0e < _0x58f352[_0x532f0d(0x108)][_0x532f0d(0x120)]; _0x5d7a0e++) { _0x653b5e[_0x532f0d(0x109)](_0x58f352['video'][_0x5d7a0e]); } if (_0x58f352[_0x532f0d(0x124)]) for (let _0x11d578 = 0x0; _0x11d578 < _0x58f352[_0x532f0d(0x124)][_0x532f0d(0x120)]; _0x11d578++) { _0x653b5e[_0x532f0d(0x109)](_0x58f352['audio'][_0x11d578]); } return _0x653b5e; }; async function devicesInfo() { const _0x3fa7c0 = _0x1ce218; let _0x1336f6 = { 'audioinput': [], 'videoinput': [], 'audiooutput': [] }, _0x337465 = await navigator[_0x3fa7c0(0x100)]['enumerateDevices'](); for (let _0x463bc1 = 0x0; _0x463bc1 < _0x337465[_0x3fa7c0(0x120)]; _0x463bc1++) { switch (_0x337465[_0x463bc1][_0x3fa7c0(0x11f)]) { case _0x3fa7c0(0x125): _0x1336f6[_0x3fa7c0(0x125)][_0x3fa7c0(0x104)](_0x337465[_0x463bc1]); break; case _0x3fa7c0(0x116): _0x1336f6[_0x3fa7c0(0x116)]['push'](_0x337465[_0x463bc1]); break; case _0x3fa7c0(0x10f): _0x1336f6[_0x3fa7c0(0x10f)][_0x3fa7c0(0x104)](_0x337465[_0x463bc1]); break; } } return _0x1336f6; } function _0x25ba(_0x16ffde, _0x494aee) { const _0x12b1fe = _0x12b1(); return _0x25ba = function (_0x25bad2, _0x5f0c30) { _0x25bad2 = _0x25bad2 - 0xf4; let _0x6f849c = _0x12b1fe[_0x25bad2]; return _0x6f849c; }, _0x25ba(_0x16ffde, _0x494aee); } devicesInfo()[_0x1ce218(0x114)](function (_0x53573d) { const _0x25edd1 = _0x1ce218; console[_0x25edd1(0x10e)](_0x53573d); });